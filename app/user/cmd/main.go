// Code generated by kitex v0.9.1, Customize by suyiiyii at https://github.com/suyiiyii/cwgo-template
package main

import (
	"github.com/sirupsen/logrus"
	"github.com/spf13/viper"
	"google.golang.org/grpc"
	"net"
	"user/conf"
	"user/discovery"
	"user/internal/handler"
	"user/internal/repository"
	service "user/internal/service/pb"
)

func main() {
	conf.InitConfig()
	repository.InitDB()

	//etcd
	etcdAddress := []string{viper.GetString("etcd.address")}
	etcdRegister := discovery.NewRegister(etcdAddress, logrus.New())
	grpcAddress := viper.GetString("server.grpcAddress")
	defer etcdRegister.Stop()
	userNode := discovery.Server{
		Name:    viper.GetString("server.domain"),
		Addr:    grpcAddress,
		Version: viper.GetString("server.version"),
	}

	srv := grpc.NewServer()
	defer srv.Stop()

	service.RegisterUserServiceServer(srv, handler.GetUserSrv())

	// 监听
	lis, err := net.Listen("tcp", grpcAddress)
	if err != nil {
		panic(err)
	}
	if _, err := etcdRegister.Register(userNode, 10); err != nil {
		panic(err)
	}
	if err = srv.Serve(lis); err != nil {
		panic(err)
	}

}
