name: CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect Changed Modules
        id: changed-modules
        run: |
          # 获取变动的文件路径
          CHANGED_FILES=$(git diff --name-only HEAD^ HEAD)
          echo "Changed files:"
          echo "$CHANGED_FILES"
        
          # 判断各模块是否有改动
          USER_CHANGED=false
          ROLE_CHANGED=false
          GATEWAY_CHANGED=false
        
          if echo "$CHANGED_FILES" | grep -q "user/"; then
            USER_CHANGED=true
          fi
          if echo "$CHANGED_FILES" | grep -q "role/"; then
            ROLE_CHANGED=true
          fi
          if echo "$CHANGED_FILES" | grep -q "gateway/"; then
            GATEWAY_CHANGED=true
          fi
        
          # 输出结果供后续步骤使用
          echo "user_changed=$USER_CHANGED" >> $GITHUB_OUTPUT
          echo "role_changed=$ROLE_CHANGED" >> $GITHUB_OUTPUT
          echo "gateway_changed=$GATEWAY_CHANGED" >> $GITHUB_OUTPUT

      # 登录阿里云容器镜像服务
      - name: Login to Aliyun ACR
        uses: docker/login-action@v2
        with:
          registry: crpi-9koetp78bl09eg2k.cn-shenzhen.personal.cr.aliyuncs.com
          username: ${{ secrets.ALIYUN_ACR_USERNAME }}
          password: ${{ secrets.ALIYUN_ACR_PASSWORD }}

      # 构建并推送gateway服务
      - name: Build and push gateway
        if: ${{ steps.changed-modules.outputs.gateway_changed == 'true' }}
        uses: docker/build-push-action@v4
        with:
          context: ./app/gateway
          tags: |
            crpi-9koetp78bl09eg2k.cn-shenzhen.personal.cr.aliyuncs.com/mocheen/huayuyue-gateway:latest
            crpi-9koetp78bl09eg2k.cn-shenzhen.personal.cr.aliyuncs.com/mocheen/huayuyue-gateway:${{ github.sha }}
          push: true

      # 构建并推送user服务
      - name: Build and push user
        if: ${{ steps.changed-modules.outputs.user_changed == 'true' }}
        uses: docker/build-push-action@v4
        with:
          context: ./app/user
          tags: |
            crpi-9koetp78bl09eg2k.cn-shenzhen.personal.cr.aliyuncs.com/mocheen/huayuyue-user:latest
            crpi-9koetp78bl09eg2k.cn-shenzhen.personal.cr.aliyuncs.com/mocheen/huayuyue-user:${{ github.sha }}
          push: true

      # 构建并推送role服务
      - name: Build and push role
        if: ${{ steps.changed-modules.outputs.role_changed == 'true' }}
        uses: docker/build-push-action@v4
        with:
          context: ./app/role
          tags: |
            crpi-9koetp78bl09eg2k.cn-shenzhen.personal.cr.aliyuncs.com/mocheen/huayuyue-role:latest
            crpi-9koetp78bl09eg2k.cn-shenzhen.personal.cr.aliyuncs.com/mocheen/huayuyue-role:${{ github.sha }}
          push: true

      # 设置SSH目录和密钥权限
      - name: Setup SSH Environment
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.JUMPSERVER_PRIVATE_KEY }}" > ~/.ssh/jumpserver.pem
          chmod 600 ~/.ssh/jumpserver.pem
          ssh-keyscan -p 2222 jumpserver.99.suyiiyii.top >> ~/.ssh/known_hosts
          
      # 复制 docker-compose.yml 和 init.sql 到服务器
      - name: Copy files to Server
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.JUMPSERVER_PRIVATE_KEY }}" > ~/.ssh/jumpserver.pem
          chmod 600 ~/.ssh/jumpserver.pem
          rsync -avz -e "ssh -p 2222 -i ~/.ssh/jumpserver.pem -o StrictHostKeyChecking=no" \
            ./docker-compose.yml \
            ./init.sql \
            ${{ secrets.JUMPSERVER_USERNAME }}@jumpserver.99.suyiiyii.top:/opt/HuaYuYue/

      # 通过SSH连接JumpServer执行部署操作
      - name: Run Commands on Target Server
        uses: appleboy/ssh-action@master
        with:
          host: jumpserver.99.suyiiyii.top
          port: 2222
          username: ${{ secrets.JUMPSERVER_USERNAME }}
          key: ${{ secrets.JUMPSERVER_PRIVATE_KEY }}
          script: |
            # 确保目录存在
            mkdir -p /opt/HuaYuYue
            
            # 检查文件是否已传输成功
            ls -la /opt/HuaYuYue/docker-compose.yml
            
            # 拉取最新镜像
            docker compose -f /opt/HuaYuYue/docker-compose.yml pull user gateway role
            
            # 启动容器
            docker compose -f /opt/HuaYuYue/docker-compose.yml up -d
            
            # 清除旧镜像
            docker image prune -af
